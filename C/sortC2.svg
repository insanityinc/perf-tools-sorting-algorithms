<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="470" onload="init(evt)" viewBox="0 0 1200 470" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="470.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="453" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="453" > </text>
<g id="frames">
<g >
<title>native_write_msr_safe (1 samples, 0.04%)</title><rect x="67.8" y="181" width="0.5" height="15.0" fill="rgb(228,30,18)" rx="2" ry="2" />
<text  x="70.84" y="191.5" ></text>
</g>
<g >
<title>kthread (1 samples, 0.04%)</title><rect x="10.5" y="373" width="0.4" height="15.0" fill="rgb(211,128,10)" rx="2" ry="2" />
<text  x="13.47" y="383.5" ></text>
</g>
<g >
<title>hrtimer_cancel (1 samples, 0.04%)</title><rect x="81.1" y="341" width="0.5" height="15.0" fill="rgb(209,114,35)" rx="2" ry="2" />
<text  x="84.11" y="351.5" ></text>
</g>
<g >
<title>sys_ioctl (5 samples, 0.20%)</title><rect x="90.6" y="293" width="2.4" height="15.0" fill="rgb(252,87,24)" rx="2" ry="2" />
<text  x="93.59" y="303.5" ></text>
</g>
<g >
<title>autoremove_wake_function (1 samples, 0.04%)</title><rect x="25.6" y="149" width="0.5" height="15.0" fill="rgb(230,172,45)" rx="2" ry="2" />
<text  x="28.64" y="159.5" ></text>
</g>
<g >
<title>scsi_softirq_done (1 samples, 0.04%)</title><rect x="1188.1" y="197" width="0.5" height="15.0" fill="rgb(243,97,20)" rx="2" ry="2" />
<text  x="1191.10" y="207.5" ></text>
</g>
<g >
<title>do_select (9 samples, 0.36%)</title><rect x="13.3" y="309" width="4.3" height="15.0" fill="rgb(205,138,51)" rx="2" ry="2" />
<text  x="16.32" y="319.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (2 samples, 0.08%)</title><rect x="1185.3" y="277" width="0.9" height="15.0" fill="rgb(213,105,16)" rx="2" ry="2" />
<text  x="1188.26" y="287.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.04%)</title><rect x="128.0" y="229" width="0.5" height="15.0" fill="rgb(224,26,30)" rx="2" ry="2" />
<text  x="131.05" y="239.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.16%)</title><rect x="91.1" y="69" width="1.9" height="15.0" fill="rgb(249,99,53)" rx="2" ry="2" />
<text  x="94.07" y="79.5" ></text>
</g>
<g >
<title>find_busiest_group (5 samples, 0.20%)</title><rect x="15.2" y="245" width="2.4" height="15.0" fill="rgb(228,175,47)" rx="2" ry="2" />
<text  x="18.21" y="255.5" ></text>
</g>
<g >
<title>handle_mm_fault (6 samples, 0.24%)</title><rect x="1179.6" y="293" width="2.8" height="15.0" fill="rgb(245,216,47)" rx="2" ry="2" />
<text  x="1182.57" y="303.5" ></text>
</g>
<g >
<title>__do_page_fault (5 samples, 0.20%)</title><rect x="154.1" y="309" width="2.4" height="15.0" fill="rgb(249,109,46)" rx="2" ry="2" />
<text  x="157.12" y="319.5" ></text>
</g>
<g >
<title>__perf_event_enable (4 samples, 0.16%)</title><rect x="1186.2" y="229" width="1.9" height="15.0" fill="rgb(238,208,41)" rx="2" ry="2" />
<text  x="1189.21" y="239.5" ></text>
</g>
<g >
<title>call_softirq (2 samples, 0.08%)</title><rect x="1184.3" y="309" width="1.0" height="15.0" fill="rgb(211,203,3)" rx="2" ry="2" />
<text  x="1187.31" y="319.5" ></text>
</g>
<g >
<title>run_timer_softirq (2 samples, 0.08%)</title><rect x="1184.3" y="277" width="1.0" height="15.0" fill="rgb(249,223,2)" rx="2" ry="2" />
<text  x="1187.31" y="287.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.04%)</title><rect x="128.0" y="181" width="0.5" height="15.0" fill="rgb(226,18,26)" rx="2" ry="2" />
<text  x="131.05" y="191.5" ></text>
</g>
<g >
<title>run_builtin (5 samples, 0.20%)</title><rect x="90.6" y="357" width="2.4" height="15.0" fill="rgb(253,71,42)" rx="2" ry="2" />
<text  x="93.59" y="367.5" ></text>
</g>
<g >
<title>sched_clock_idle_sleep_event (1 samples, 0.04%)</title><rect x="80.2" y="357" width="0.4" height="15.0" fill="rgb(213,134,15)" rx="2" ry="2" />
<text  x="83.16" y="367.5" ></text>
</g>
<g >
<title>all (2,489 samples, 100%)</title><rect x="10.0" y="421" width="1180.0" height="15.0" fill="rgb(240,29,26)" rx="2" ry="2" />
<text  x="13.00" y="431.5" ></text>
</g>
<g >
<title>ksoftirqd (1 samples, 0.04%)</title><rect x="88.2" y="357" width="0.5" height="15.0" fill="rgb(213,110,24)" rx="2" ry="2" />
<text  x="91.22" y="367.5" ></text>
</g>
<g >
<title>__queue_work (1 samples, 0.04%)</title><rect x="25.6" y="213" width="0.5" height="15.0" fill="rgb(214,16,50)" rx="2" ry="2" />
<text  x="28.64" y="223.5" ></text>
</g>
<g >
<title>perf_pmu_enable (4 samples, 0.16%)</title><rect x="91.1" y="117" width="1.9" height="15.0" fill="rgb(235,41,24)" rx="2" ry="2" />
<text  x="94.07" y="127.5" ></text>
</g>
<g >
<title>group_sched_in (4 samples, 0.16%)</title><rect x="1186.2" y="213" width="1.9" height="15.0" fill="rgb(230,148,24)" rx="2" ry="2" />
<text  x="1189.21" y="223.5" ></text>
</g>
<g >
<title>perf_event_enable (5 samples, 0.20%)</title><rect x="90.6" y="213" width="2.4" height="15.0" fill="rgb(248,7,46)" rx="2" ry="2" />
<text  x="93.59" y="223.5" ></text>
</g>
<g >
<title>__perf_event_enable (4 samples, 0.16%)</title><rect x="91.1" y="165" width="1.9" height="15.0" fill="rgb(244,99,5)" rx="2" ry="2" />
<text  x="94.07" y="175.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.04%)</title><rect x="78.3" y="245" width="0.4" height="15.0" fill="rgb(251,221,22)" rx="2" ry="2" />
<text  x="81.27" y="255.5" ></text>
</g>
<g >
<title>__dequeue_entity (2 samples, 0.08%)</title><rect x="83.0" y="293" width="1.0" height="15.0" fill="rgb(250,54,42)" rx="2" ry="2" />
<text  x="86.01" y="303.5" ></text>
</g>
<g >
<title>task_of (1 samples, 0.04%)</title><rect x="14.7" y="197" width="0.5" height="15.0" fill="rgb(219,92,10)" rx="2" ry="2" />
<text  x="17.74" y="207.5" ></text>
</g>
<g >
<title>perf (6 samples, 0.24%)</title><rect x="90.1" y="405" width="2.9" height="15.0" fill="rgb(221,208,47)" rx="2" ry="2" />
<text  x="93.12" y="415.5" ></text>
</g>
<g >
<title>[unknown] (12 samples, 0.48%)</title><rect x="12.4" y="373" width="5.7" height="15.0" fill="rgb(252,144,19)" rx="2" ry="2" />
<text  x="15.37" y="383.5" ></text>
</g>
<g >
<title>system_call_fastpath (2 samples, 0.08%)</title><rect x="93.0" y="373" width="0.9" height="15.0" fill="rgb(220,68,39)" rx="2" ry="2" />
<text  x="95.97" y="383.5" ></text>
</g>
<g >
<title>migration/15 (1 samples, 0.04%)</title><rect x="88.7" y="405" width="0.5" height="15.0" fill="rgb(247,86,26)" rx="2" ry="2" />
<text  x="91.70" y="415.5" ></text>
</g>
<g >
<title>sys_select (10 samples, 0.40%)</title><rect x="13.3" y="341" width="4.8" height="15.0" fill="rgb(240,198,4)" rx="2" ry="2" />
<text  x="16.32" y="351.5" ></text>
</g>
<g >
<title>ini_vector (54 samples, 2.17%)</title><rect x="130.9" y="357" width="25.6" height="15.0" fill="rgb(210,56,31)" rx="2" ry="2" />
<text  x="133.89" y="367.5" >i..</text>
</g>
<g >
<title>handle_pte_fault (1 samples, 0.04%)</title><rect x="130.4" y="277" width="0.5" height="15.0" fill="rgb(213,99,45)" rx="2" ry="2" />
<text  x="133.42" y="287.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.08%)</title><rect x="1185.3" y="261" width="0.9" height="15.0" fill="rgb(229,193,46)" rx="2" ry="2" />
<text  x="1188.26" y="271.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="10.0" y="389" width="0.5" height="15.0" fill="rgb(243,19,14)" rx="2" ry="2" />
<text  x="13.00" y="399.5" ></text>
</g>
<g >
<title>vmstat_update (1 samples, 0.04%)</title><rect x="11.4" y="341" width="0.5" height="15.0" fill="rgb(229,107,10)" rx="2" ry="2" />
<text  x="14.42" y="351.5" ></text>
</g>
<g >
<title>run_timer_softirq (2 samples, 0.08%)</title><rect x="1185.3" y="197" width="0.9" height="15.0" fill="rgb(225,106,24)" rx="2" ry="2" />
<text  x="1188.26" y="207.5" ></text>
</g>
<g >
<title>worker_thread (1 samples, 0.04%)</title><rect x="11.4" y="357" width="0.5" height="15.0" fill="rgb(219,206,27)" rx="2" ry="2" />
<text  x="14.42" y="367.5" ></text>
</g>
<g >
<title>__execve (1 samples, 0.04%)</title><rect x="90.1" y="389" width="0.5" height="15.0" fill="rgb(226,214,9)" rx="2" ry="2" />
<text  x="93.12" y="399.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.16%)</title><rect x="1186.2" y="165" width="1.9" height="15.0" fill="rgb(209,170,46)" rx="2" ry="2" />
<text  x="1189.21" y="175.5" ></text>
</g>
<g >
<title>smp_call_function_single_interrupt (5 samples, 0.20%)</title><rect x="1186.2" y="277" width="2.4" height="15.0" fill="rgb(244,134,30)" rx="2" ry="2" />
<text  x="1189.21" y="287.5" ></text>
</g>
<g >
<title>atomic_notifier_call_chain (1 samples, 0.04%)</title><rect x="78.7" y="341" width="0.5" height="15.0" fill="rgb(207,158,53)" rx="2" ry="2" />
<text  x="81.74" y="351.5" ></text>
</g>
<g >
<title>gmond (12 samples, 0.48%)</title><rect x="12.4" y="405" width="5.7" height="15.0" fill="rgb(210,84,37)" rx="2" ry="2" />
<text  x="15.37" y="415.5" ></text>
</g>
<g >
<title>__remove_hrtimer (1 samples, 0.04%)</title><rect x="81.1" y="309" width="0.5" height="15.0" fill="rgb(251,1,38)" rx="2" ry="2" />
<text  x="84.11" y="319.5" ></text>
</g>
<g >
<title>enqueue_task (1 samples, 0.04%)</title><rect x="25.6" y="85" width="0.5" height="15.0" fill="rgb(221,169,53)" rx="2" ry="2" />
<text  x="28.64" y="95.5" ></text>
</g>
<g >
<title>_spin_lock_bh (1 samples, 0.04%)</title><rect x="78.3" y="197" width="0.4" height="15.0" fill="rgb(229,217,3)" rx="2" ry="2" />
<text  x="81.27" y="207.5" ></text>
</g>
<g >
<title>run_posix_cpu_timers (1 samples, 0.04%)</title><rect x="23.3" y="245" width="0.4" height="15.0" fill="rgb(216,167,33)" rx="2" ry="2" />
<text  x="26.27" y="255.5" ></text>
</g>
<g >
<title>call_softirq (1 samples, 0.04%)</title><rect x="1188.1" y="229" width="0.5" height="15.0" fill="rgb(242,143,33)" rx="2" ry="2" />
<text  x="1191.10" y="239.5" ></text>
</g>
<g >
<title>worker_thread (1 samples, 0.04%)</title><rect x="87.8" y="357" width="0.4" height="15.0" fill="rgb(254,141,18)" rx="2" ry="2" />
<text  x="90.75" y="367.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (1 samples, 0.04%)</title><rect x="81.6" y="341" width="0.5" height="15.0" fill="rgb(212,60,46)" rx="2" ry="2" />
<text  x="84.59" y="351.5" ></text>
</g>
<g >
<title>task_tick_fair (1 samples, 0.04%)</title><rect x="1183.8" y="261" width="0.5" height="15.0" fill="rgb(243,3,40)" rx="2" ry="2" />
<text  x="1186.84" y="271.5" ></text>
</g>
<g >
<title>schedule (2 samples, 0.08%)</title><rect x="83.0" y="341" width="1.0" height="15.0" fill="rgb(239,186,10)" rx="2" ry="2" />
<text  x="86.01" y="351.5" ></text>
</g>
<g >
<title>kthread (1 samples, 0.04%)</title><rect x="88.2" y="373" width="0.5" height="15.0" fill="rgb(206,109,43)" rx="2" ry="2" />
<text  x="91.22" y="383.5" ></text>
</g>
<g >
<title>rebalance_domains (1 samples, 0.04%)</title><rect x="24.7" y="229" width="0.5" height="15.0" fill="rgb(236,98,48)" rx="2" ry="2" />
<text  x="27.70" y="239.5" ></text>
</g>
<g >
<title>child_rip (1 samples, 0.04%)</title><rect x="88.7" y="389" width="0.5" height="15.0" fill="rgb(254,78,7)" rx="2" ry="2" />
<text  x="91.70" y="399.5" ></text>
</g>
<g >
<title>_spin_lock (1 samples, 0.04%)</title><rect x="1182.9" y="229" width="0.5" height="15.0" fill="rgb(243,64,10)" rx="2" ry="2" />
<text  x="1185.89" y="239.5" ></text>
</g>
<g >
<title>page_fault (6 samples, 0.24%)</title><rect x="128.0" y="341" width="2.9" height="15.0" fill="rgb(247,201,33)" rx="2" ry="2" />
<text  x="131.05" y="351.5" ></text>
</g>
<g >
<title>page_fault (6 samples, 0.24%)</title><rect x="1179.6" y="341" width="2.8" height="15.0" fill="rgb(224,173,12)" rx="2" ry="2" />
<text  x="1182.57" y="351.5" ></text>
</g>
<g >
<title>do_execve (1 samples, 0.04%)</title><rect x="90.1" y="341" width="0.5" height="15.0" fill="rgb(225,211,36)" rx="2" ry="2" />
<text  x="93.12" y="351.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.04%)</title><rect x="78.3" y="325" width="0.4" height="15.0" fill="rgb(221,151,12)" rx="2" ry="2" />
<text  x="81.27" y="335.5" ></text>
</g>
<g >
<title>native_write_msr_safe (4 samples, 0.16%)</title><rect x="1186.2" y="117" width="1.9" height="15.0" fill="rgb(215,204,11)" rx="2" ry="2" />
<text  x="1189.21" y="127.5" ></text>
</g>
<g >
<title>show_stat (1 samples, 0.04%)</title><rect x="93.4" y="293" width="0.5" height="15.0" fill="rgb(222,8,46)" rx="2" ry="2" />
<text  x="96.44" y="303.5" ></text>
</g>
<g >
<title>thread_return (8 samples, 0.32%)</title><rect x="13.8" y="261" width="3.8" height="15.0" fill="rgb(234,150,54)" rx="2" ry="2" />
<text  x="16.79" y="271.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (14 samples, 0.56%)</title><rect x="20.0" y="325" width="6.6" height="15.0" fill="rgb(253,172,13)" rx="2" ry="2" />
<text  x="22.96" y="335.5" ></text>
</g>
<g >
<title>remote_function (88 samples, 3.54%)</title><rect x="26.6" y="293" width="41.7" height="15.0" fill="rgb(217,59,41)" rx="2" ry="2" />
<text  x="29.59" y="303.5" >rem..</text>
</g>
<g >
<title>next_zone (1 samples, 0.04%)</title><rect x="11.4" y="309" width="0.5" height="15.0" fill="rgb(233,211,54)" rx="2" ry="2" />
<text  x="14.42" y="319.5" ></text>
</g>
<g >
<title>kcs_event (8 samples, 0.32%)</title><rect x="84.0" y="325" width="3.8" height="15.0" fill="rgb(224,198,0)" rx="2" ry="2" />
<text  x="86.96" y="335.5" ></text>
</g>
<g >
<title>perf_pmu_enable (88 samples, 3.54%)</title><rect x="26.6" y="229" width="41.7" height="15.0" fill="rgb(251,10,39)" rx="2" ry="2" />
<text  x="29.59" y="239.5" >per..</text>
</g>
<g >
<title>search_binary_handler (1 samples, 0.04%)</title><rect x="90.1" y="325" width="0.5" height="15.0" fill="rgb(231,218,42)" rx="2" ry="2" />
<text  x="93.12" y="335.5" ></text>
</g>
<g >
<title>delayed_work_timer_fn (1 samples, 0.04%)</title><rect x="24.2" y="245" width="0.5" height="15.0" fill="rgb(238,47,43)" rx="2" ry="2" />
<text  x="27.22" y="255.5" ></text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.04%)</title><rect x="25.6" y="117" width="0.5" height="15.0" fill="rgb(250,72,17)" rx="2" ry="2" />
<text  x="28.64" y="127.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.08%)</title><rect x="89.2" y="389" width="0.9" height="15.0" fill="rgb(242,168,45)" rx="2" ry="2" />
<text  x="92.17" y="399.5" ></text>
</g>
<g >
<title>main (5 samples, 0.20%)</title><rect x="90.6" y="373" width="2.4" height="15.0" fill="rgb(224,138,46)" rx="2" ry="2" />
<text  x="93.59" y="383.5" ></text>
</g>
<g >
<title>remote_function (4 samples, 0.16%)</title><rect x="91.1" y="181" width="1.9" height="15.0" fill="rgb(247,190,40)" rx="2" ry="2" />
<text  x="94.07" y="191.5" ></text>
</g>
<g >
<title>rebalance_domains (1 samples, 0.04%)</title><rect x="88.2" y="293" width="0.5" height="15.0" fill="rgb(205,45,33)" rx="2" ry="2" />
<text  x="91.22" y="303.5" ></text>
</g>
<g >
<title>intel_idle (2 samples, 0.08%)</title><rect x="1188.6" y="293" width="0.9" height="15.0" fill="rgb(209,178,12)" rx="2" ry="2" />
<text  x="1191.58" y="303.5" ></text>
</g>
<g >
<title>kthread (1 samples, 0.04%)</title><rect x="88.7" y="373" width="0.5" height="15.0" fill="rgb(228,121,36)" rx="2" ry="2" />
<text  x="91.70" y="383.5" ></text>
</g>
<g >
<title>__wake_up_common (2 samples, 0.08%)</title><rect x="1184.3" y="197" width="1.0" height="15.0" fill="rgb(246,118,25)" rx="2" ry="2" />
<text  x="1187.31" y="207.5" ></text>
</g>
<g >
<title>ipmi_thread (11 samples, 0.44%)</title><rect x="82.5" y="357" width="5.3" height="15.0" fill="rgb(241,139,36)" rx="2" ry="2" />
<text  x="85.54" y="367.5" ></text>
</g>
<g >
<title>__libc_start_main (2,296 samples, 92.25%)</title><rect x="93.9" y="389" width="1088.5" height="15.0" fill="rgb(250,229,15)" rx="2" ry="2" />
<text  x="96.91" y="399.5" >__libc_start_main</text>
</g>
<g >
<title>place_entity (1 samples, 0.04%)</title><rect x="21.9" y="181" width="0.4" height="15.0" fill="rgb(249,225,38)" rx="2" ry="2" />
<text  x="24.85" y="191.5" ></text>
</g>
<g >
<title>events/16 (1 samples, 0.04%)</title><rect x="10.5" y="405" width="0.4" height="15.0" fill="rgb(225,61,44)" rx="2" ry="2" />
<text  x="13.47" y="415.5" ></text>
</g>
<g >
<title>task_rq_lock (1 samples, 0.04%)</title><rect x="22.8" y="229" width="0.5" height="15.0" fill="rgb(207,51,23)" rx="2" ry="2" />
<text  x="25.80" y="239.5" ></text>
</g>
<g >
<title>vmstat_update (1 samples, 0.04%)</title><rect x="10.9" y="341" width="0.5" height="15.0" fill="rgb(243,74,36)" rx="2" ry="2" />
<text  x="13.95" y="351.5" ></text>
</g>
<g >
<title>exit_mmap (1 samples, 0.04%)</title><rect x="90.1" y="261" width="0.5" height="15.0" fill="rgb(224,12,27)" rx="2" ry="2" />
<text  x="93.12" y="271.5" ></text>
</g>
<g >
<title>irq_enter (1 samples, 0.04%)</title><rect x="23.7" y="309" width="0.5" height="15.0" fill="rgb(238,131,44)" rx="2" ry="2" />
<text  x="26.75" y="319.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (10 samples, 0.40%)</title><rect x="1185.3" y="373" width="4.7" height="15.0" fill="rgb(222,11,8)" rx="2" ry="2" />
<text  x="1188.26" y="383.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (6 samples, 0.24%)</title><rect x="1182.4" y="373" width="2.9" height="15.0" fill="rgb(239,163,54)" rx="2" ry="2" />
<text  x="1185.41" y="383.5" ></text>
</g>
<g >
<title>enqueue_task_fair (1 samples, 0.04%)</title><rect x="1184.3" y="101" width="0.5" height="15.0" fill="rgb(227,23,2)" rx="2" ry="2" />
<text  x="1187.31" y="111.5" ></text>
</g>
<g >
<title>pick_next_task_fair (2 samples, 0.08%)</title><rect x="83.0" y="325" width="1.0" height="15.0" fill="rgb(210,199,3)" rx="2" ry="2" />
<text  x="86.01" y="335.5" ></text>
</g>
<g >
<title>uhci_check_ports (1 samples, 0.04%)</title><rect x="1185.7" y="133" width="0.5" height="15.0" fill="rgb(249,146,32)" rx="2" ry="2" />
<text  x="1188.73" y="143.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (2 samples, 0.08%)</title><rect x="1185.3" y="293" width="0.9" height="15.0" fill="rgb(225,77,15)" rx="2" ry="2" />
<text  x="1188.26" y="303.5" ></text>
</g>
<g >
<title>generic_smp_call_function_single_interrupt (88 samples, 3.54%)</title><rect x="26.6" y="309" width="41.7" height="15.0" fill="rgb(234,188,26)" rx="2" ry="2" />
<text  x="29.59" y="319.5" >gen..</text>
</g>
<g >
<title>sort (2,302 samples, 92.49%)</title><rect x="93.9" y="405" width="1091.4" height="15.0" fill="rgb(254,92,4)" rx="2" ry="2" />
<text  x="96.91" y="415.5" >sort</text>
</g>
<g >
<title>call_softirq (2 samples, 0.08%)</title><rect x="1185.3" y="229" width="0.9" height="15.0" fill="rgb(228,221,0)" rx="2" ry="2" />
<text  x="1188.26" y="239.5" ></text>
</g>
<g >
<title>clear_page_c (5 samples, 0.20%)</title><rect x="154.1" y="261" width="2.4" height="15.0" fill="rgb(208,135,45)" rx="2" ry="2" />
<text  x="157.12" y="271.5" ></text>
</g>
<g >
<title>child_rip (1 samples, 0.04%)</title><rect x="87.8" y="389" width="0.4" height="15.0" fill="rgb(237,126,44)" rx="2" ry="2" />
<text  x="90.75" y="399.5" ></text>
</g>
<g >
<title>system_call_fastpath (1 samples, 0.04%)</title><rect x="10.0" y="373" width="0.5" height="15.0" fill="rgb(238,13,18)" rx="2" ry="2" />
<text  x="13.00" y="383.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.04%)</title><rect x="1183.8" y="277" width="0.5" height="15.0" fill="rgb(227,130,6)" rx="2" ry="2" />
<text  x="1186.84" y="287.5" ></text>
</g>
<g >
<title>getnstimeofday (1 samples, 0.04%)</title><rect x="77.3" y="309" width="0.5" height="15.0" fill="rgb(230,170,39)" rx="2" ry="2" />
<text  x="80.32" y="319.5" ></text>
</g>
<g >
<title>delayed_work_timer_fn (2 samples, 0.08%)</title><rect x="1184.3" y="261" width="1.0" height="15.0" fill="rgb(210,142,54)" rx="2" ry="2" />
<text  x="1187.31" y="271.5" ></text>
</g>
<g >
<title>__remove_hrtimer (1 samples, 0.04%)</title><rect x="20.4" y="277" width="0.5" height="15.0" fill="rgb(243,203,17)" rx="2" ry="2" />
<text  x="23.43" y="287.5" ></text>
</g>
<g >
<title>intel_pmu_nhm_enable_all (88 samples, 3.54%)</title><rect x="26.6" y="197" width="41.7" height="15.0" fill="rgb(209,62,49)" rx="2" ry="2" />
<text  x="29.59" y="207.5" >int..</text>
</g>
<g >
<title>group_sched_in (88 samples, 3.54%)</title><rect x="26.6" y="261" width="41.7" height="15.0" fill="rgb(234,111,46)" rx="2" ry="2" />
<text  x="29.59" y="271.5" >gro..</text>
</g>
<g >
<title>__switch_to (1 samples, 0.04%)</title><rect x="12.8" y="357" width="0.5" height="15.0" fill="rgb(224,13,43)" rx="2" ry="2" />
<text  x="15.84" y="367.5" ></text>
</g>
<g >
<title>__do_softirq (1 samples, 0.04%)</title><rect x="88.2" y="325" width="0.5" height="15.0" fill="rgb(211,8,40)" rx="2" ry="2" />
<text  x="91.22" y="335.5" ></text>
</g>
<g >
<title>perf_pmu_enable (4 samples, 0.16%)</title><rect x="1186.2" y="181" width="1.9" height="15.0" fill="rgb(226,222,46)" rx="2" ry="2" />
<text  x="1189.21" y="191.5" ></text>
</g>
<g >
<title>flush_tlb_mm (1 samples, 0.04%)</title><rect x="90.1" y="245" width="0.5" height="15.0" fill="rgb(220,119,35)" rx="2" ry="2" />
<text  x="93.12" y="255.5" ></text>
</g>
<g >
<title>drain_array (1 samples, 0.04%)</title><rect x="11.9" y="325" width="0.5" height="15.0" fill="rgb(247,171,51)" rx="2" ry="2" />
<text  x="14.90" y="335.5" ></text>
</g>
<g >
<title>child_rip (1 samples, 0.04%)</title><rect x="10.9" y="389" width="0.5" height="15.0" fill="rgb(246,49,52)" rx="2" ry="2" />
<text  x="13.95" y="399.5" ></text>
</g>
<g >
<title>generic_smp_call_function_single_interrupt (4 samples, 0.16%)</title><rect x="1186.2" y="261" width="1.9" height="15.0" fill="rgb(225,138,31)" rx="2" ry="2" />
<text  x="1189.21" y="271.5" ></text>
</g>
<g >
<title>uhci_hub_status_data (1 samples, 0.04%)</title><rect x="1185.7" y="149" width="0.5" height="15.0" fill="rgb(222,36,54)" rx="2" ry="2" />
<text  x="1188.73" y="159.5" ></text>
</g>
<g >
<title>set_next_entity (2 samples, 0.08%)</title><rect x="83.0" y="309" width="1.0" height="15.0" fill="rgb(234,56,48)" rx="2" ry="2" />
<text  x="86.01" y="319.5" ></text>
</g>
<g >
<title>poll_select_copy_remaining (1 samples, 0.04%)</title><rect x="17.6" y="325" width="0.5" height="15.0" fill="rgb(226,73,38)" rx="2" ry="2" />
<text  x="20.59" y="335.5" ></text>
</g>
<g >
<title>rb_next (1 samples, 0.04%)</title><rect x="83.5" y="277" width="0.5" height="15.0" fill="rgb(240,113,27)" rx="2" ry="2" />
<text  x="86.48" y="287.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.04%)</title><rect x="78.3" y="341" width="0.4" height="15.0" fill="rgb(234,72,50)" rx="2" ry="2" />
<text  x="81.27" y="351.5" ></text>
</g>
<g >
<title>menu_reflect (1 samples, 0.04%)</title><rect x="79.2" y="357" width="0.5" height="15.0" fill="rgb(212,206,52)" rx="2" ry="2" />
<text  x="82.22" y="367.5" ></text>
</g>
<g >
<title>activate_task (3 samples, 0.12%)</title><rect x="21.4" y="229" width="1.4" height="15.0" fill="rgb(224,109,40)" rx="2" ry="2" />
<text  x="24.38" y="239.5" ></text>
</g>
<g >
<title>thread_return (1 samples, 0.04%)</title><rect x="87.8" y="341" width="0.4" height="15.0" fill="rgb(252,212,33)" rx="2" ry="2" />
<text  x="90.75" y="351.5" ></text>
</g>
<g >
<title>automount (1 samples, 0.04%)</title><rect x="10.0" y="405" width="0.5" height="15.0" fill="rgb(216,152,37)" rx="2" ry="2" />
<text  x="13.00" y="415.5" ></text>
</g>
<g >
<title>kthread (1 samples, 0.04%)</title><rect x="87.8" y="373" width="0.4" height="15.0" fill="rgb(222,56,32)" rx="2" ry="2" />
<text  x="90.75" y="383.5" ></text>
</g>
<g >
<title>__do_softirq (2 samples, 0.08%)</title><rect x="1184.3" y="293" width="1.0" height="15.0" fill="rgb(206,206,38)" rx="2" ry="2" />
<text  x="1187.31" y="303.5" ></text>
</g>
<g >
<title>snmpd (2 samples, 0.08%)</title><rect x="93.0" y="405" width="0.9" height="15.0" fill="rgb(212,103,38)" rx="2" ry="2" />
<text  x="95.97" y="415.5" ></text>
</g>
<g >
<title>__do_softirq (1 samples, 0.04%)</title><rect x="78.3" y="261" width="0.4" height="15.0" fill="rgb(245,105,32)" rx="2" ry="2" />
<text  x="81.27" y="271.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (127 samples, 5.10%)</title><rect x="18.5" y="357" width="60.2" height="15.0" fill="rgb(227,80,2)" rx="2" ry="2" />
<text  x="21.53" y="367.5" >cpuidl..</text>
</g>
<g >
<title>x86_pmu_enable (88 samples, 3.54%)</title><rect x="26.6" y="213" width="41.7" height="15.0" fill="rgb(228,25,49)" rx="2" ry="2" />
<text  x="29.59" y="223.5" >x86..</text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.04%)</title><rect x="23.3" y="277" width="0.4" height="15.0" fill="rgb(241,207,51)" rx="2" ry="2" />
<text  x="26.27" y="287.5" ></text>
</g>
<g >
<title>system_call_fastpath (5 samples, 0.20%)</title><rect x="90.6" y="309" width="2.4" height="15.0" fill="rgb(214,9,44)" rx="2" ry="2" />
<text  x="93.59" y="319.5" ></text>
</g>
<g >
<title>activate_task (1 samples, 0.04%)</title><rect x="25.6" y="101" width="0.5" height="15.0" fill="rgb(230,143,0)" rx="2" ry="2" />
<text  x="28.64" y="111.5" ></text>
</g>
<g >
<title>core_sys_select (9 samples, 0.36%)</title><rect x="13.3" y="325" width="4.3" height="15.0" fill="rgb(230,15,18)" rx="2" ry="2" />
<text  x="16.32" y="335.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.16%)</title><rect x="91.1" y="101" width="1.9" height="15.0" fill="rgb(251,216,26)" rx="2" ry="2" />
<text  x="94.07" y="111.5" ></text>
</g>
<g >
<title>next_online_pgdat (1 samples, 0.04%)</title><rect x="11.4" y="293" width="0.5" height="15.0" fill="rgb(224,27,6)" rx="2" ry="2" />
<text  x="14.42" y="303.5" ></text>
</g>
<g >
<title>kthread (1 samples, 0.04%)</title><rect x="10.9" y="373" width="0.5" height="15.0" fill="rgb(254,6,0)" rx="2" ry="2" />
<text  x="13.95" y="383.5" ></text>
</g>
<g >
<title>call_softirq (1 samples, 0.04%)</title><rect x="78.3" y="277" width="0.4" height="15.0" fill="rgb(213,176,17)" rx="2" ry="2" />
<text  x="81.27" y="287.5" ></text>
</g>
<g >
<title>place_entity (1 samples, 0.04%)</title><rect x="1184.3" y="69" width="0.5" height="15.0" fill="rgb(229,123,2)" rx="2" ry="2" />
<text  x="1187.31" y="79.5" ></text>
</g>
<g >
<title>usb_hcd_poll_rh_status (1 samples, 0.04%)</title><rect x="1185.7" y="165" width="0.5" height="15.0" fill="rgb(250,95,45)" rx="2" ry="2" />
<text  x="1188.73" y="175.5" ></text>
</g>
<g >
<title>rand@plt (3 samples, 0.12%)</title><rect x="158.4" y="357" width="1.4" height="15.0" fill="rgb(224,197,24)" rx="2" ry="2" />
<text  x="161.39" y="367.5" ></text>
</g>
<g >
<title>proc_reg_read (2 samples, 0.08%)</title><rect x="93.0" y="325" width="0.9" height="15.0" fill="rgb(254,140,31)" rx="2" ry="2" />
<text  x="95.97" y="335.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (10 samples, 0.40%)</title><rect x="1185.3" y="389" width="4.7" height="15.0" fill="rgb(216,214,29)" rx="2" ry="2" />
<text  x="1188.26" y="399.5" ></text>
</g>
<g >
<title>cmd_record (5 samples, 0.20%)</title><rect x="90.6" y="341" width="2.4" height="15.0" fill="rgb(233,165,19)" rx="2" ry="2" />
<text  x="93.59" y="351.5" ></text>
</g>
<g >
<title>__hrtimer_start_range_ns (1 samples, 0.04%)</title><rect x="81.6" y="325" width="0.5" height="15.0" fill="rgb(240,150,48)" rx="2" ry="2" />
<text  x="84.59" y="335.5" ></text>
</g>
<g >
<title>worker_thread (1 samples, 0.04%)</title><rect x="10.5" y="357" width="0.4" height="15.0" fill="rgb(229,227,16)" rx="2" ry="2" />
<text  x="13.47" y="367.5" ></text>
</g>
<g >
<title>rh_timer_func (1 samples, 0.04%)</title><rect x="1185.7" y="181" width="0.5" height="15.0" fill="rgb(205,190,52)" rx="2" ry="2" />
<text  x="1188.73" y="191.5" ></text>
</g>
<g >
<title>tick_sched_timer (4 samples, 0.16%)</title><rect x="1182.4" y="309" width="1.9" height="15.0" fill="rgb(229,193,15)" rx="2" ry="2" />
<text  x="1185.41" y="319.5" ></text>
</g>
<g >
<title>lru_cache_add_lru (1 samples, 0.04%)</title><rect x="1181.9" y="261" width="0.5" height="15.0" fill="rgb(207,228,34)" rx="2" ry="2" />
<text  x="1184.94" y="271.5" ></text>
</g>
<g >
<title>update_cfs_load (1 samples, 0.04%)</title><rect x="22.3" y="181" width="0.5" height="15.0" fill="rgb(239,161,9)" rx="2" ry="2" />
<text  x="25.33" y="191.5" ></text>
</g>
<g >
<title>enqueue_task_fair (1 samples, 0.04%)</title><rect x="25.6" y="69" width="0.5" height="15.0" fill="rgb(216,167,40)" rx="2" ry="2" />
<text  x="28.64" y="79.5" ></text>
</g>
<g >
<title>page_fault (5 samples, 0.20%)</title><rect x="154.1" y="341" width="2.4" height="15.0" fill="rgb(217,125,36)" rx="2" ry="2" />
<text  x="157.12" y="351.5" ></text>
</g>
<g >
<title>native_write_msr_safe (87 samples, 3.50%)</title><rect x="26.6" y="165" width="41.2" height="15.0" fill="rgb(234,26,3)" rx="2" ry="2" />
<text  x="29.59" y="175.5" >nat..</text>
</g>
<g >
<title>main (2,296 samples, 92.25%)</title><rect x="93.9" y="373" width="1088.5" height="15.0" fill="rgb(240,108,54)" rx="2" ry="2" />
<text  x="96.91" y="383.5" >main</text>
</g>
<g >
<title>do_huge_pmd_anonymous_page (5 samples, 0.20%)</title><rect x="154.1" y="277" width="2.4" height="15.0" fill="rgb(235,156,52)" rx="2" ry="2" />
<text  x="157.12" y="287.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.08%)</title><rect x="93.0" y="389" width="0.9" height="15.0" fill="rgb(212,155,27)" rx="2" ry="2" />
<text  x="95.97" y="399.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (15 samples, 0.60%)</title><rect x="19.5" y="341" width="7.1" height="15.0" fill="rgb(235,199,46)" rx="2" ry="2" />
<text  x="22.48" y="351.5" ></text>
</g>
<g >
<title>deactivate_task (2 samples, 0.08%)</title><rect x="14.3" y="245" width="0.9" height="15.0" fill="rgb(207,196,16)" rx="2" ry="2" />
<text  x="17.27" y="255.5" ></text>
</g>
<g >
<title>handle_mm_fault (5 samples, 0.20%)</title><rect x="154.1" y="293" width="2.4" height="15.0" fill="rgb(249,43,37)" rx="2" ry="2" />
<text  x="157.12" y="303.5" ></text>
</g>
<g >
<title>update_curr (1 samples, 0.04%)</title><rect x="14.3" y="181" width="0.4" height="15.0" fill="rgb(250,45,15)" rx="2" ry="2" />
<text  x="17.27" y="191.5" ></text>
</g>
<g >
<title>call_function_single_interrupt (5 samples, 0.20%)</title><rect x="1186.2" y="293" width="2.4" height="15.0" fill="rgb(253,58,14)" rx="2" ry="2" />
<text  x="1189.21" y="303.5" ></text>
</g>
<g >
<title>perf_event_for_each_child (5 samples, 0.20%)</title><rect x="90.6" y="229" width="2.4" height="15.0" fill="rgb(215,1,25)" rx="2" ry="2" />
<text  x="93.59" y="239.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.04%)</title><rect x="78.3" y="309" width="0.4" height="15.0" fill="rgb(238,155,2)" rx="2" ry="2" />
<text  x="81.27" y="319.5" ></text>
</g>
<g >
<title>do_softirq (4 samples, 0.16%)</title><rect x="24.2" y="293" width="1.9" height="15.0" fill="rgb(218,79,34)" rx="2" ry="2" />
<text  x="27.22" y="303.5" ></text>
</g>
<g >
<title>intel_pmu_nhm_enable_all (4 samples, 0.16%)</title><rect x="91.1" y="85" width="1.9" height="15.0" fill="rgb(253,76,3)" rx="2" ry="2" />
<text  x="94.07" y="95.5" ></text>
</g>
<g >
<title>do_softirq (1 samples, 0.04%)</title><rect x="78.3" y="293" width="0.4" height="15.0" fill="rgb(229,87,45)" rx="2" ry="2" />
<text  x="81.27" y="303.5" ></text>
</g>
<g >
<title>__run_hrtimer (1 samples, 0.04%)</title><rect x="128.0" y="213" width="0.5" height="15.0" fill="rgb(244,196,52)" rx="2" ry="2" />
<text  x="131.05" y="223.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.04%)</title><rect x="128.0" y="165" width="0.5" height="15.0" fill="rgb(247,1,13)" rx="2" ry="2" />
<text  x="131.05" y="175.5" ></text>
</g>
<g >
<title>rest_init (10 samples, 0.40%)</title><rect x="1185.3" y="341" width="4.7" height="15.0" fill="rgb(224,48,26)" rx="2" ry="2" />
<text  x="1188.26" y="351.5" ></text>
</g>
<g >
<title>enqueue_task (3 samples, 0.12%)</title><rect x="21.4" y="213" width="1.4" height="15.0" fill="rgb(251,194,15)" rx="2" ry="2" />
<text  x="24.38" y="223.5" ></text>
</g>
<g >
<title>pm_qos_requirement (1 samples, 0.04%)</title><rect x="77.8" y="325" width="0.5" height="15.0" fill="rgb(228,27,4)" rx="2" ry="2" />
<text  x="80.79" y="335.5" ></text>
</g>
<g >
<title>vfs_read (2 samples, 0.08%)</title><rect x="93.0" y="341" width="0.9" height="15.0" fill="rgb(228,185,41)" rx="2" ry="2" />
<text  x="95.97" y="351.5" ></text>
</g>
<g >
<title>generic_exec_single (1 samples, 0.04%)</title><rect x="90.6" y="181" width="0.5" height="15.0" fill="rgb(235,43,54)" rx="2" ry="2" />
<text  x="93.59" y="191.5" ></text>
</g>
<g >
<title>printk_needs_cpu (1 samples, 0.04%)</title><rect x="79.7" y="357" width="0.5" height="15.0" fill="rgb(234,60,17)" rx="2" ry="2" />
<text  x="82.69" y="367.5" ></text>
</g>
<g >
<title>place_entity (1 samples, 0.04%)</title><rect x="25.6" y="37" width="0.5" height="15.0" fill="rgb(226,50,50)" rx="2" ry="2" />
<text  x="28.64" y="47.5" ></text>
</g>
<g >
<title>alloc_pages_vma (1 samples, 0.04%)</title><rect x="130.4" y="261" width="0.5" height="15.0" fill="rgb(219,61,36)" rx="2" ry="2" />
<text  x="133.42" y="271.5" ></text>
</g>
<g >
<title>child_rip (1 samples, 0.04%)</title><rect x="10.5" y="389" width="0.4" height="15.0" fill="rgb(209,226,14)" rx="2" ry="2" />
<text  x="13.47" y="399.5" ></text>
</g>
<g >
<title>filldir (1 samples, 0.04%)</title><rect x="10.0" y="325" width="0.5" height="15.0" fill="rgb(220,39,16)" rx="2" ry="2" />
<text  x="13.00" y="335.5" ></text>
</g>
<g >
<title>enqueue_entity (1 samples, 0.04%)</title><rect x="21.4" y="181" width="0.5" height="15.0" fill="rgb(233,22,39)" rx="2" ry="2" />
<text  x="24.38" y="191.5" ></text>
</g>
<g >
<title>init (136 samples, 5.46%)</title><rect x="18.1" y="405" width="64.4" height="15.0" fill="rgb(237,217,5)" rx="2" ry="2" />
<text  x="21.06" y="415.5" >init</text>
</g>
<g >
<title>update_vsyscall (2 samples, 0.08%)</title><rect x="1182.4" y="245" width="1.0" height="15.0" fill="rgb(216,112,9)" rx="2" ry="2" />
<text  x="1185.41" y="255.5" ></text>
</g>
<g >
<title>do_huge_pmd_anonymous_page (6 samples, 0.24%)</title><rect x="1179.6" y="277" width="2.8" height="15.0" fill="rgb(209,189,38)" rx="2" ry="2" />
<text  x="1182.57" y="287.5" ></text>
</g>
<g >
<title>rb_erase (1 samples, 0.04%)</title><rect x="83.0" y="277" width="0.5" height="15.0" fill="rgb(249,112,28)" rx="2" ry="2" />
<text  x="86.01" y="287.5" ></text>
</g>
<g >
<title>system_call_fastpath (10 samples, 0.40%)</title><rect x="13.3" y="357" width="4.8" height="15.0" fill="rgb(218,140,23)" rx="2" ry="2" />
<text  x="16.32" y="367.5" ></text>
</g>
<g >
<title>call_softirq (1 samples, 0.04%)</title><rect x="88.2" y="341" width="0.5" height="15.0" fill="rgb(250,126,3)" rx="2" ry="2" />
<text  x="91.22" y="351.5" ></text>
</g>
<g >
<title>__do_softirq (4 samples, 0.16%)</title><rect x="24.2" y="261" width="1.9" height="15.0" fill="rgb(235,79,24)" rx="2" ry="2" />
<text  x="27.22" y="271.5" ></text>
</g>
<g >
<title>__do_softirq (1 samples, 0.04%)</title><rect x="1188.1" y="213" width="0.5" height="15.0" fill="rgb(231,118,40)" rx="2" ry="2" />
<text  x="1191.10" y="223.5" ></text>
</g>
<g >
<title>seq_read (2 samples, 0.08%)</title><rect x="93.0" y="309" width="0.9" height="15.0" fill="rgb(210,148,17)" rx="2" ry="2" />
<text  x="95.97" y="319.5" ></text>
</g>
<g >
<title>__run_hrtimer (4 samples, 0.16%)</title><rect x="1182.4" y="325" width="1.9" height="15.0" fill="rgb(215,157,43)" rx="2" ry="2" />
<text  x="1185.41" y="335.5" ></text>
</g>
<g >
<title>start_kernel (10 samples, 0.40%)</title><rect x="1185.3" y="357" width="4.7" height="15.0" fill="rgb(205,128,12)" rx="2" ry="2" />
<text  x="1188.26" y="367.5" ></text>
</g>
<g >
<title>copy_vector (37 samples, 1.49%)</title><rect x="113.4" y="357" width="17.5" height="15.0" fill="rgb(205,81,32)" rx="2" ry="2" />
<text  x="116.35" y="367.5" ></text>
</g>
<g >
<title>remote_function (4 samples, 0.16%)</title><rect x="1186.2" y="245" width="1.9" height="15.0" fill="rgb(213,92,4)" rx="2" ry="2" />
<text  x="1189.21" y="255.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (1 samples, 0.04%)</title><rect x="82.1" y="373" width="0.4" height="15.0" fill="rgb(218,41,24)" rx="2" ry="2" />
<text  x="85.06" y="383.5" ></text>
</g>
<g >
<title>hrtimer_try_to_cancel (1 samples, 0.04%)</title><rect x="1189.5" y="293" width="0.5" height="15.0" fill="rgb(209,222,26)" rx="2" ry="2" />
<text  x="1192.53" y="303.5" ></text>
</g>
<g >
<title>insert_work (2 samples, 0.08%)</title><rect x="1184.3" y="229" width="1.0" height="15.0" fill="rgb(247,109,45)" rx="2" ry="2" />
<text  x="1187.31" y="239.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.04%)</title><rect x="23.3" y="261" width="0.4" height="15.0" fill="rgb(208,10,19)" rx="2" ry="2" />
<text  x="26.27" y="271.5" ></text>
</g>
<g >
<title>__libc_start_main (5 samples, 0.20%)</title><rect x="90.6" y="389" width="2.4" height="15.0" fill="rgb(231,180,53)" rx="2" ry="2" />
<text  x="93.59" y="399.5" ></text>
</g>
<g >
<title>do_softirq (2 samples, 0.08%)</title><rect x="1184.3" y="325" width="1.0" height="15.0" fill="rgb(227,79,23)" rx="2" ry="2" />
<text  x="1187.31" y="335.5" ></text>
</g>
<g >
<title>tick_check_idle (1 samples, 0.04%)</title><rect x="23.7" y="293" width="0.5" height="15.0" fill="rgb(235,128,20)" rx="2" ry="2" />
<text  x="26.75" y="303.5" ></text>
</g>
<g >
<title>__wake_up (1 samples, 0.04%)</title><rect x="25.6" y="181" width="0.5" height="15.0" fill="rgb(226,129,42)" rx="2" ry="2" />
<text  x="28.64" y="191.5" ></text>
</g>
<g >
<title>dma_issue_pending_all (1 samples, 0.04%)</title><rect x="78.3" y="229" width="0.4" height="15.0" fill="rgb(227,185,44)" rx="2" ry="2" />
<text  x="81.27" y="239.5" ></text>
</g>
<g >
<title>call_softirq (4 samples, 0.16%)</title><rect x="24.2" y="277" width="1.9" height="15.0" fill="rgb(240,61,0)" rx="2" ry="2" />
<text  x="27.22" y="287.5" ></text>
</g>
<g >
<title>sys_execve (1 samples, 0.04%)</title><rect x="90.1" y="357" width="0.5" height="15.0" fill="rgb(253,174,47)" rx="2" ry="2" />
<text  x="93.12" y="367.5" ></text>
</g>
<g >
<title>group_sched_in (4 samples, 0.16%)</title><rect x="91.1" y="149" width="1.9" height="15.0" fill="rgb(225,223,39)" rx="2" ry="2" />
<text  x="94.07" y="159.5" ></text>
</g>
<g >
<title>do_vfs_ioctl (5 samples, 0.20%)</title><rect x="90.6" y="277" width="2.4" height="15.0" fill="rgb(210,52,52)" rx="2" ry="2" />
<text  x="93.59" y="287.5" ></text>
</g>
<g >
<title>insert_work (1 samples, 0.04%)</title><rect x="25.6" y="197" width="0.5" height="15.0" fill="rgb(232,162,35)" rx="2" ry="2" />
<text  x="28.64" y="207.5" ></text>
</g>
<g >
<title>smi_event_handler (8 samples, 0.32%)</title><rect x="84.0" y="341" width="3.8" height="15.0" fill="rgb(245,106,41)" rx="2" ry="2" />
<text  x="86.96" y="351.5" ></text>
</g>
<g >
<title>run_timer_softirq (2 samples, 0.08%)</title><rect x="25.2" y="245" width="0.9" height="15.0" fill="rgb(226,143,39)" rx="2" ry="2" />
<text  x="28.17" y="255.5" ></text>
</g>
<g >
<title>migration_thread (1 samples, 0.04%)</title><rect x="88.7" y="357" width="0.5" height="15.0" fill="rgb(221,95,1)" rx="2" ry="2" />
<text  x="91.70" y="367.5" ></text>
</g>
<g >
<title>kthread (11 samples, 0.44%)</title><rect x="82.5" y="373" width="5.3" height="15.0" fill="rgb(238,34,48)" rx="2" ry="2" />
<text  x="85.54" y="383.5" ></text>
</g>
<g >
<title>__random_r (18 samples, 0.72%)</title><rect x="104.8" y="357" width="8.6" height="15.0" fill="rgb(210,189,48)" rx="2" ry="2" />
<text  x="107.82" y="367.5" ></text>
</g>
<g >
<title>sort2 (2,157 samples, 86.66%)</title><rect x="159.8" y="357" width="1022.6" height="15.0" fill="rgb(242,47,48)" rx="2" ry="2" />
<text  x="162.81" y="367.5" >sort2</text>
</g>
<g >
<title>kthread (1 samples, 0.04%)</title><rect x="11.4" y="373" width="0.5" height="15.0" fill="rgb(248,101,23)" rx="2" ry="2" />
<text  x="14.42" y="383.5" ></text>
</g>
<g >
<title>call_function_single_interrupt (88 samples, 3.54%)</title><rect x="26.6" y="341" width="41.7" height="15.0" fill="rgb(236,11,10)" rx="2" ry="2" />
<text  x="29.59" y="351.5" >cal..</text>
</g>
<g >
<title>x86_pmu_commit_txn (4 samples, 0.16%)</title><rect x="1186.2" y="197" width="1.9" height="15.0" fill="rgb(236,77,5)" rx="2" ry="2" />
<text  x="1189.21" y="207.5" ></text>
</g>
<g >
<title>task_rq_lock (1 samples, 0.04%)</title><rect x="20.9" y="245" width="0.5" height="15.0" fill="rgb(238,77,21)" rx="2" ry="2" />
<text  x="23.90" y="255.5" ></text>
</g>
<g >
<title>update_process_times (2 samples, 0.08%)</title><rect x="1183.4" y="293" width="0.9" height="15.0" fill="rgb(223,64,24)" rx="2" ry="2" />
<text  x="1186.36" y="303.5" ></text>
</g>
<g >
<title>do_page_fault (6 samples, 0.24%)</title><rect x="128.0" y="325" width="2.9" height="15.0" fill="rgb(224,19,36)" rx="2" ry="2" />
<text  x="131.05" y="335.5" ></text>
</g>
<g >
<title>do_page_fault (5 samples, 0.20%)</title><rect x="154.1" y="325" width="2.4" height="15.0" fill="rgb(229,68,51)" rx="2" ry="2" />
<text  x="157.12" y="335.5" ></text>
</g>
<g >
<title>child_rip (1 samples, 0.04%)</title><rect x="11.9" y="389" width="0.5" height="15.0" fill="rgb(229,177,8)" rx="2" ry="2" />
<text  x="14.90" y="399.5" ></text>
</g>
<g >
<title>__run_hrtimer (7 samples, 0.28%)</title><rect x="20.4" y="293" width="3.3" height="15.0" fill="rgb(218,93,1)" rx="2" ry="2" />
<text  x="23.43" y="303.5" ></text>
</g>
<g >
<title>hrtimer_try_to_cancel (1 samples, 0.04%)</title><rect x="81.1" y="325" width="0.5" height="15.0" fill="rgb(239,166,39)" rx="2" ry="2" />
<text  x="84.11" y="335.5" ></text>
</g>
<g >
<title>menu_select (1 samples, 0.04%)</title><rect x="77.8" y="341" width="0.5" height="15.0" fill="rgb(234,122,40)" rx="2" ry="2" />
<text  x="80.79" y="351.5" ></text>
</g>
<g >
<title>do_huge_pmd_anonymous_page (5 samples, 0.20%)</title><rect x="128.0" y="277" width="2.4" height="15.0" fill="rgb(254,108,7)" rx="2" ry="2" />
<text  x="131.05" y="287.5" ></text>
</g>
<g >
<title>handle_mm_fault (6 samples, 0.24%)</title><rect x="128.0" y="293" width="2.9" height="15.0" fill="rgb(223,157,43)" rx="2" ry="2" />
<text  x="131.05" y="303.5" ></text>
</g>
<g >
<title>smp_call_function_single_interrupt (88 samples, 3.54%)</title><rect x="26.6" y="325" width="41.7" height="15.0" fill="rgb(223,54,32)" rx="2" ry="2" />
<text  x="29.59" y="335.5" >smp..</text>
</g>
<g >
<title>enqueue_entity (1 samples, 0.04%)</title><rect x="1184.3" y="85" width="0.5" height="15.0" fill="rgb(226,167,44)" rx="2" ry="2" />
<text  x="1187.31" y="95.5" ></text>
</g>
<g >
<title>start_secondary (136 samples, 5.46%)</title><rect x="18.1" y="389" width="64.4" height="15.0" fill="rgb(239,209,46)" rx="2" ry="2" />
<text  x="21.06" y="399.5" >start_s..</text>
</g>
<g >
<title>tick_nohz_stop_sched_tick (1 samples, 0.04%)</title><rect x="26.1" y="309" width="0.5" height="15.0" fill="rgb(244,104,40)" rx="2" ry="2" />
<text  x="29.12" y="319.5" ></text>
</g>
<g >
<title>cpumask_next_and (2 samples, 0.08%)</title><rect x="16.6" y="229" width="1.0" height="15.0" fill="rgb(226,107,41)" rx="2" ry="2" />
<text  x="19.64" y="239.5" ></text>
</g>
<g >
<title>__wake_up_common (1 samples, 0.04%)</title><rect x="25.6" y="165" width="0.5" height="15.0" fill="rgb(244,117,5)" rx="2" ry="2" />
<text  x="28.64" y="175.5" ></text>
</g>
<g >
<title>__GI___ioctl (5 samples, 0.20%)</title><rect x="90.6" y="325" width="2.4" height="15.0" fill="rgb(240,207,4)" rx="2" ry="2" />
<text  x="93.59" y="335.5" ></text>
</g>
<g >
<title>account_process_tick (1 samples, 0.04%)</title><rect x="1183.4" y="277" width="0.4" height="15.0" fill="rgb(220,54,43)" rx="2" ry="2" />
<text  x="1186.36" y="287.5" ></text>
</g>
<g >
<title>[unknown] (12 samples, 0.48%)</title><rect x="12.4" y="389" width="5.7" height="15.0" fill="rgb(247,160,8)" rx="2" ry="2" />
<text  x="15.37" y="399.5" ></text>
</g>
<g >
<title>__do_softirq (2 samples, 0.08%)</title><rect x="1185.3" y="213" width="0.9" height="15.0" fill="rgb(226,30,6)" rx="2" ry="2" />
<text  x="1188.26" y="223.5" ></text>
</g>
<g >
<title>sort2 (6 samples, 0.24%)</title><rect x="1182.4" y="389" width="2.9" height="15.0" fill="rgb(251,199,4)" rx="2" ry="2" />
<text  x="1185.41" y="399.5" ></text>
</g>
<g >
<title>mmput (1 samples, 0.04%)</title><rect x="90.1" y="277" width="0.5" height="15.0" fill="rgb(241,121,23)" rx="2" ry="2" />
<text  x="93.12" y="287.5" ></text>
</g>
<g >
<title>kondemand/0 (1 samples, 0.04%)</title><rect x="87.8" y="405" width="0.4" height="15.0" fill="rgb(221,10,21)" rx="2" ry="2" />
<text  x="90.75" y="415.5" ></text>
</g>
<g >
<title>select_task_rq_fair (1 samples, 0.04%)</title><rect x="1184.8" y="133" width="0.5" height="15.0" fill="rgb(232,90,13)" rx="2" ry="2" />
<text  x="1187.79" y="143.5" ></text>
</g>
<g >
<title>sys_getdents (1 samples, 0.04%)</title><rect x="10.0" y="357" width="0.5" height="15.0" fill="rgb(209,80,31)" rx="2" ry="2" />
<text  x="13.00" y="367.5" ></text>
</g>
<g >
<title>load_elf_binary (1 samples, 0.04%)</title><rect x="90.1" y="309" width="0.5" height="15.0" fill="rgb(249,118,29)" rx="2" ry="2" />
<text  x="93.12" y="319.5" ></text>
</g>
<g >
<title>hrtimer_wakeup (5 samples, 0.20%)</title><rect x="20.9" y="277" width="2.4" height="15.0" fill="rgb(225,54,4)" rx="2" ry="2" />
<text  x="23.90" y="287.5" ></text>
</g>
<g >
<title>pbs_mom (2 samples, 0.08%)</title><rect x="89.2" y="405" width="0.9" height="15.0" fill="rgb(249,5,27)" rx="2" ry="2" />
<text  x="92.17" y="415.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.04%)</title><rect x="1179.6" y="245" width="0.4" height="15.0" fill="rgb(242,55,53)" rx="2" ry="2" />
<text  x="1182.57" y="255.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.08%)</title><rect x="1184.3" y="341" width="1.0" height="15.0" fill="rgb(240,182,47)" rx="2" ry="2" />
<text  x="1187.31" y="351.5" ></text>
</g>
<g >
<title>enter_idle (1 samples, 0.04%)</title><rect x="78.7" y="357" width="0.5" height="15.0" fill="rgb(221,40,14)" rx="2" ry="2" />
<text  x="81.74" y="367.5" ></text>
</g>
<g >
<title>clear_page_c (4 samples, 0.16%)</title><rect x="128.5" y="261" width="1.9" height="15.0" fill="rgb(248,118,30)" rx="2" ry="2" />
<text  x="131.52" y="271.5" ></text>
</g>
<g >
<title>rand (4 samples, 0.16%)</title><rect x="156.5" y="357" width="1.9" height="15.0" fill="rgb(218,112,45)" rx="2" ry="2" />
<text  x="159.49" y="367.5" ></text>
</g>
<g >
<title>default_wake_function (2 samples, 0.08%)</title><rect x="1184.3" y="165" width="1.0" height="15.0" fill="rgb(246,195,23)" rx="2" ry="2" />
<text  x="1187.31" y="175.5" ></text>
</g>
<g >
<title>_spin_lock_irqsave (1 samples, 0.04%)</title><rect x="82.5" y="341" width="0.5" height="15.0" fill="rgb(232,168,19)" rx="2" ry="2" />
<text  x="85.54" y="351.5" ></text>
</g>
<g >
<title>refresh_cpu_vm_stats (1 samples, 0.04%)</title><rect x="10.9" y="325" width="0.5" height="15.0" fill="rgb(246,45,20)" rx="2" ry="2" />
<text  x="13.95" y="335.5" ></text>
</g>
<g >
<title>ksoftirqd/17 (1 samples, 0.04%)</title><rect x="88.2" y="405" width="0.5" height="15.0" fill="rgb(207,169,12)" rx="2" ry="2" />
<text  x="91.22" y="415.5" ></text>
</g>
<g >
<title>intel_pmu_nhm_enable_all (4 samples, 0.16%)</title><rect x="1186.2" y="149" width="1.9" height="15.0" fill="rgb(220,15,34)" rx="2" ry="2" />
<text  x="1189.21" y="159.5" ></text>
</g>
<g >
<title>dequeue_task_fair (2 samples, 0.08%)</title><rect x="14.3" y="213" width="0.9" height="15.0" fill="rgb(236,118,33)" rx="2" ry="2" />
<text  x="17.27" y="223.5" ></text>
</g>
<g >
<title>dequeue_task (2 samples, 0.08%)</title><rect x="14.3" y="229" width="0.9" height="15.0" fill="rgb(219,112,37)" rx="2" ry="2" />
<text  x="17.27" y="239.5" ></text>
</g>
<g >
<title>sys_read (2 samples, 0.08%)</title><rect x="93.0" y="357" width="0.9" height="15.0" fill="rgb(241,99,29)" rx="2" ry="2" />
<text  x="95.97" y="367.5" ></text>
</g>
<g >
<title>flush_old_exec (1 samples, 0.04%)</title><rect x="90.1" y="293" width="0.5" height="15.0" fill="rgb(246,93,45)" rx="2" ry="2" />
<text  x="93.12" y="303.5" ></text>
</g>
<g >
<title>tick_do_update_jiffies64 (2 samples, 0.08%)</title><rect x="1182.4" y="293" width="1.0" height="15.0" fill="rgb(234,166,17)" rx="2" ry="2" />
<text  x="1185.41" y="303.5" ></text>
</g>
<g >
<title>cpu_idle (10 samples, 0.40%)</title><rect x="1185.3" y="325" width="4.7" height="15.0" fill="rgb(236,54,24)" rx="2" ry="2" />
<text  x="1188.26" y="335.5" ></text>
</g>
<g >
<title>enqueue_task_fair (3 samples, 0.12%)</title><rect x="21.4" y="197" width="1.4" height="15.0" fill="rgb(244,213,36)" rx="2" ry="2" />
<text  x="24.38" y="207.5" ></text>
</g>
<g >
<title>read_tsc (1 samples, 0.04%)</title><rect x="77.3" y="293" width="0.5" height="15.0" fill="rgb(223,20,12)" rx="2" ry="2" />
<text  x="80.32" y="303.5" ></text>
</g>
<g >
<title>smp_call_function_single (5 samples, 0.20%)</title><rect x="90.6" y="197" width="2.4" height="15.0" fill="rgb(217,7,8)" rx="2" ry="2" />
<text  x="93.59" y="207.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.04%)</title><rect x="128.0" y="197" width="0.5" height="15.0" fill="rgb(243,60,48)" rx="2" ry="2" />
<text  x="131.05" y="207.5" ></text>
</g>
<g >
<title>tick_nohz_restart_sched_tick (2 samples, 0.08%)</title><rect x="81.1" y="357" width="1.0" height="15.0" fill="rgb(205,171,51)" rx="2" ry="2" />
<text  x="84.11" y="367.5" ></text>
</g>
<g >
<title>activate_task (1 samples, 0.04%)</title><rect x="1184.3" y="133" width="0.5" height="15.0" fill="rgb(233,96,39)" rx="2" ry="2" />
<text  x="1187.31" y="143.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.04%)</title><rect x="1188.1" y="261" width="0.5" height="15.0" fill="rgb(211,130,1)" rx="2" ry="2" />
<text  x="1191.10" y="271.5" ></text>
</g>
<g >
<title>events/22 (1 samples, 0.04%)</title><rect x="10.9" y="405" width="0.5" height="15.0" fill="rgb(225,82,36)" rx="2" ry="2" />
<text  x="13.95" y="415.5" ></text>
</g>
<g >
<title>ioat2_issue_pending (1 samples, 0.04%)</title><rect x="78.3" y="213" width="0.4" height="15.0" fill="rgb(240,154,45)" rx="2" ry="2" />
<text  x="81.27" y="223.5" ></text>
</g>
<g >
<title>__percpu_counter_add (1 samples, 0.04%)</title><rect x="1183.4" y="245" width="0.4" height="15.0" fill="rgb(238,153,17)" rx="2" ry="2" />
<text  x="1186.36" y="255.5" ></text>
</g>
<g >
<title>find_next_bit (1 samples, 0.04%)</title><rect x="17.1" y="213" width="0.5" height="15.0" fill="rgb(223,98,44)" rx="2" ry="2" />
<text  x="20.11" y="223.5" ></text>
</g>
<g >
<title>intel_idle (20 samples, 0.80%)</title><rect x="68.3" y="341" width="9.5" height="15.0" fill="rgb(205,188,13)" rx="2" ry="2" />
<text  x="71.31" y="351.5" ></text>
</g>
<g >
<title>__perf_event_enable (88 samples, 3.54%)</title><rect x="26.6" y="277" width="41.7" height="15.0" fill="rgb(248,125,32)" rx="2" ry="2" />
<text  x="29.59" y="287.5" >__p..</text>
</g>
<g >
<title>update_curr (1 samples, 0.04%)</title><rect x="1183.8" y="245" width="0.5" height="15.0" fill="rgb(229,130,5)" rx="2" ry="2" />
<text  x="1186.84" y="255.5" ></text>
</g>
<g >
<title>x86_pmu_commit_txn (88 samples, 3.54%)</title><rect x="26.6" y="245" width="41.7" height="15.0" fill="rgb(239,64,30)" rx="2" ry="2" />
<text  x="29.59" y="255.5" >x86..</text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="128.0" y="261" width="0.5" height="15.0" fill="rgb(231,222,7)" rx="2" ry="2" />
<text  x="131.05" y="271.5" ></text>
</g>
<g >
<title>kthread (1 samples, 0.04%)</title><rect x="11.9" y="373" width="0.5" height="15.0" fill="rgb(232,91,40)" rx="2" ry="2" />
<text  x="14.90" y="383.5" ></text>
</g>
<g >
<title>native_flush_tlb_others (1 samples, 0.04%)</title><rect x="90.1" y="229" width="0.5" height="15.0" fill="rgb(222,35,25)" rx="2" ry="2" />
<text  x="93.12" y="239.5" ></text>
</g>
<g >
<title>update_wall_time (2 samples, 0.08%)</title><rect x="1182.4" y="261" width="1.0" height="15.0" fill="rgb(224,31,41)" rx="2" ry="2" />
<text  x="1185.41" y="271.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (87 samples, 3.50%)</title><rect x="26.6" y="181" width="41.2" height="15.0" fill="rgb(222,96,22)" rx="2" ry="2" />
<text  x="29.59" y="191.5" >int..</text>
</g>
<g >
<title>cpu_idle (135 samples, 5.42%)</title><rect x="18.1" y="373" width="64.0" height="15.0" fill="rgb(242,52,18)" rx="2" ry="2" />
<text  x="21.06" y="383.5" >cpu_idle</text>
</g>
<g >
<title>child_rip (11 samples, 0.44%)</title><rect x="82.5" y="389" width="5.3" height="15.0" fill="rgb(215,191,27)" rx="2" ry="2" />
<text  x="85.54" y="399.5" ></text>
</g>
<g >
<title>__do_page_fault (6 samples, 0.24%)</title><rect x="1179.6" y="309" width="2.8" height="15.0" fill="rgb(221,199,40)" rx="2" ry="2" />
<text  x="1182.57" y="319.5" ></text>
</g>
<g >
<title>clear_page_c (4 samples, 0.16%)</title><rect x="1180.0" y="261" width="1.9" height="15.0" fill="rgb(207,80,22)" rx="2" ry="2" />
<text  x="1183.04" y="271.5" ></text>
</g>
<g >
<title>find_busiest_group (1 samples, 0.04%)</title><rect x="87.8" y="325" width="0.4" height="15.0" fill="rgb(245,124,1)" rx="2" ry="2" />
<text  x="90.75" y="335.5" ></text>
</g>
<g >
<title>do_timer (2 samples, 0.08%)</title><rect x="1182.4" y="277" width="1.0" height="15.0" fill="rgb(220,80,48)" rx="2" ry="2" />
<text  x="1185.41" y="287.5" ></text>
</g>
<g >
<title>do_page_fault (6 samples, 0.24%)</title><rect x="1179.6" y="325" width="2.8" height="15.0" fill="rgb(214,46,30)" rx="2" ry="2" />
<text  x="1182.57" y="335.5" ></text>
</g>
<g >
<title>tick_nohz_restart_sched_tick (1 samples, 0.04%)</title><rect x="1189.5" y="309" width="0.5" height="15.0" fill="rgb(211,114,17)" rx="2" ry="2" />
<text  x="1192.53" y="319.5" ></text>
</g>
<g >
<title>vfs_readdir (1 samples, 0.04%)</title><rect x="10.0" y="341" width="0.5" height="15.0" fill="rgb(229,144,9)" rx="2" ry="2" />
<text  x="13.00" y="351.5" ></text>
</g>
<g >
<title>native_write_msr_safe (4 samples, 0.16%)</title><rect x="91.1" y="53" width="1.9" height="15.0" fill="rgb(254,212,41)" rx="2" ry="2" />
<text  x="94.07" y="63.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.04%)</title><rect x="80.6" y="357" width="0.5" height="15.0" fill="rgb(231,190,25)" rx="2" ry="2" />
<text  x="83.64" y="367.5" ></text>
</g>
<g >
<title>find_busiest_group (1 samples, 0.04%)</title><rect x="88.2" y="277" width="0.5" height="15.0" fill="rgb(206,167,2)" rx="2" ry="2" />
<text  x="91.22" y="287.5" ></text>
</g>
<g >
<title>vfs_ioctl (5 samples, 0.20%)</title><rect x="90.6" y="261" width="2.4" height="15.0" fill="rgb(206,211,34)" rx="2" ry="2" />
<text  x="93.59" y="271.5" ></text>
</g>
<g >
<title>put_prev_task_fair (1 samples, 0.04%)</title><rect x="13.3" y="245" width="0.5" height="15.0" fill="rgb(213,4,5)" rx="2" ry="2" />
<text  x="16.32" y="255.5" ></text>
</g>
<g >
<title>worker_thread (1 samples, 0.04%)</title><rect x="10.9" y="357" width="0.5" height="15.0" fill="rgb(221,161,17)" rx="2" ry="2" />
<text  x="13.95" y="367.5" ></text>
</g>
<g >
<title>irq_exit (4 samples, 0.16%)</title><rect x="24.2" y="309" width="1.9" height="15.0" fill="rgb(232,211,30)" rx="2" ry="2" />
<text  x="27.22" y="319.5" ></text>
</g>
<g >
<title>find_busiest_group (1 samples, 0.04%)</title><rect x="24.7" y="213" width="0.5" height="15.0" fill="rgb(245,130,38)" rx="2" ry="2" />
<text  x="27.70" y="223.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.16%)</title><rect x="1186.2" y="133" width="1.9" height="15.0" fill="rgb(213,114,22)" rx="2" ry="2" />
<text  x="1189.21" y="143.5" ></text>
</g>
<g >
<title>wake_up_process (5 samples, 0.20%)</title><rect x="20.9" y="261" width="2.4" height="15.0" fill="rgb(240,147,48)" rx="2" ry="2" />
<text  x="23.90" y="271.5" ></text>
</g>
<g >
<title>pick_next_task_idle (1 samples, 0.04%)</title><rect x="88.7" y="341" width="0.5" height="15.0" fill="rgb(214,43,35)" rx="2" ry="2" />
<text  x="91.70" y="351.5" ></text>
</g>
<g >
<title>flush_tlb_others_ipi (1 samples, 0.04%)</title><rect x="90.1" y="213" width="0.5" height="15.0" fill="rgb(211,185,44)" rx="2" ry="2" />
<text  x="93.12" y="223.5" ></text>
</g>
<g >
<title>ktime_get_real (1 samples, 0.04%)</title><rect x="77.3" y="325" width="0.5" height="15.0" fill="rgb(240,136,33)" rx="2" ry="2" />
<text  x="80.32" y="335.5" ></text>
</g>
<g >
<title>seq_printf (1 samples, 0.04%)</title><rect x="93.4" y="277" width="0.5" height="15.0" fill="rgb(208,127,7)" rx="2" ry="2" />
<text  x="96.44" y="287.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="128.0" y="245" width="0.5" height="15.0" fill="rgb(231,142,47)" rx="2" ry="2" />
<text  x="131.05" y="255.5" ></text>
</g>
<g >
<title>refresh_cpu_vm_stats (1 samples, 0.04%)</title><rect x="11.4" y="325" width="0.5" height="15.0" fill="rgb(246,162,4)" rx="2" ry="2" />
<text  x="14.42" y="335.5" ></text>
</g>
<g >
<title>__wake_up (2 samples, 0.08%)</title><rect x="1184.3" y="213" width="1.0" height="15.0" fill="rgb(228,182,5)" rx="2" ry="2" />
<text  x="1187.31" y="223.5" ></text>
</g>
<g >
<title>default_wake_function (1 samples, 0.04%)</title><rect x="25.6" y="133" width="0.5" height="15.0" fill="rgb(207,122,51)" rx="2" ry="2" />
<text  x="28.64" y="143.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (9 samples, 0.36%)</title><rect x="1185.3" y="309" width="4.2" height="15.0" fill="rgb(245,221,19)" rx="2" ry="2" />
<text  x="1188.26" y="319.5" ></text>
</g>
<g >
<title>do_softirq (1 samples, 0.04%)</title><rect x="1188.1" y="245" width="0.5" height="15.0" fill="rgb(236,216,40)" rx="2" ry="2" />
<text  x="1191.10" y="255.5" ></text>
</g>
<g >
<title>__queue_work (2 samples, 0.08%)</title><rect x="1184.3" y="245" width="1.0" height="15.0" fill="rgb(222,75,17)" rx="2" ry="2" />
<text  x="1187.31" y="255.5" ></text>
</g>
<g >
<title>refresh_cpu_vm_stats (1 samples, 0.04%)</title><rect x="10.5" y="341" width="0.4" height="15.0" fill="rgb(220,76,42)" rx="2" ry="2" />
<text  x="13.47" y="351.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (4 samples, 0.16%)</title><rect x="1182.4" y="341" width="1.9" height="15.0" fill="rgb(208,93,4)" rx="2" ry="2" />
<text  x="1185.41" y="351.5" ></text>
</g>
<g >
<title>run_rebalance_domains (1 samples, 0.04%)</title><rect x="24.7" y="245" width="0.5" height="15.0" fill="rgb(214,188,21)" rx="2" ry="2" />
<text  x="27.70" y="255.5" ></text>
</g>
<g >
<title>events/4 (1 samples, 0.04%)</title><rect x="11.9" y="405" width="0.5" height="15.0" fill="rgb(228,29,32)" rx="2" ry="2" />
<text  x="14.90" y="415.5" ></text>
</g>
<g >
<title>stub_execve (1 samples, 0.04%)</title><rect x="90.1" y="373" width="0.5" height="15.0" fill="rgb(248,45,9)" rx="2" ry="2" />
<text  x="93.12" y="383.5" ></text>
</g>
<g >
<title>port_inb (8 samples, 0.32%)</title><rect x="84.0" y="309" width="3.8" height="15.0" fill="rgb(205,8,39)" rx="2" ry="2" />
<text  x="86.96" y="319.5" ></text>
</g>
<g >
<title>x86_pmu_commit_txn (4 samples, 0.16%)</title><rect x="91.1" y="133" width="1.9" height="15.0" fill="rgb(238,136,0)" rx="2" ry="2" />
<text  x="94.07" y="143.5" ></text>
</g>
<g >
<title>__do_page_fault (6 samples, 0.24%)</title><rect x="128.0" y="309" width="2.9" height="15.0" fill="rgb(234,79,38)" rx="2" ry="2" />
<text  x="131.05" y="319.5" ></text>
</g>
<g >
<title>try_to_wake_up (4 samples, 0.16%)</title><rect x="21.4" y="245" width="1.9" height="15.0" fill="rgb(236,79,17)" rx="2" ry="2" />
<text  x="24.38" y="255.5" ></text>
</g>
<g >
<title>account_user_time (1 samples, 0.04%)</title><rect x="1183.4" y="261" width="0.4" height="15.0" fill="rgb(233,69,4)" rx="2" ry="2" />
<text  x="1186.36" y="271.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (8 samples, 0.32%)</title><rect x="20.0" y="309" width="3.7" height="15.0" fill="rgb(205,128,10)" rx="2" ry="2" />
<text  x="22.96" y="319.5" ></text>
</g>
<g >
<title>alloc_pages_vma (1 samples, 0.04%)</title><rect x="1179.6" y="261" width="0.4" height="15.0" fill="rgb(247,172,15)" rx="2" ry="2" />
<text  x="1182.57" y="271.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (9 samples, 0.36%)</title><rect x="13.3" y="277" width="4.3" height="15.0" fill="rgb(207,42,4)" rx="2" ry="2" />
<text  x="16.32" y="287.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.04%)</title><rect x="1179.6" y="229" width="0.4" height="15.0" fill="rgb(213,51,38)" rx="2" ry="2" />
<text  x="1182.57" y="239.5" ></text>
</g>
<g >
<title>do_timer (1 samples, 0.04%)</title><rect x="23.7" y="277" width="0.5" height="15.0" fill="rgb(251,42,13)" rx="2" ry="2" />
<text  x="26.75" y="287.5" ></text>
</g>
<g >
<title>dequeue_entity (1 samples, 0.04%)</title><rect x="14.3" y="197" width="0.4" height="15.0" fill="rgb(239,64,3)" rx="2" ry="2" />
<text  x="17.27" y="207.5" ></text>
</g>
<g >
<title>run_rebalance_domains (1 samples, 0.04%)</title><rect x="88.2" y="309" width="0.5" height="15.0" fill="rgb(207,115,13)" rx="2" ry="2" />
<text  x="91.22" y="319.5" ></text>
</g>
<g >
<title>do_softirq (2 samples, 0.08%)</title><rect x="1185.3" y="245" width="0.9" height="15.0" fill="rgb(225,153,44)" rx="2" ry="2" />
<text  x="1188.26" y="255.5" ></text>
</g>
<g >
<title>autoremove_wake_function (2 samples, 0.08%)</title><rect x="1184.3" y="181" width="1.0" height="15.0" fill="rgb(205,174,34)" rx="2" ry="2" />
<text  x="1187.31" y="191.5" ></text>
</g>
<g >
<title>poll_schedule_timeout (9 samples, 0.36%)</title><rect x="13.3" y="293" width="4.3" height="15.0" fill="rgb(241,32,13)" rx="2" ry="2" />
<text  x="16.32" y="303.5" ></text>
</g>
<g >
<title>child_rip (1 samples, 0.04%)</title><rect x="88.2" y="389" width="0.5" height="15.0" fill="rgb(235,113,19)" rx="2" ry="2" />
<text  x="91.22" y="399.5" ></text>
</g>
<g >
<title>cache_reap (1 samples, 0.04%)</title><rect x="11.9" y="341" width="0.5" height="15.0" fill="rgb(222,116,26)" rx="2" ry="2" />
<text  x="14.90" y="351.5" ></text>
</g>
<g >
<title>read_tsc (1 samples, 0.04%)</title><rect x="17.6" y="309" width="0.5" height="15.0" fill="rgb(212,213,8)" rx="2" ry="2" />
<text  x="20.59" y="319.5" ></text>
</g>
<g >
<title>enqueue_task (1 samples, 0.04%)</title><rect x="1184.3" y="117" width="0.5" height="15.0" fill="rgb(253,47,36)" rx="2" ry="2" />
<text  x="1187.31" y="127.5" ></text>
</g>
<g >
<title>enqueue_entity (1 samples, 0.04%)</title><rect x="25.6" y="53" width="0.5" height="15.0" fill="rgb(235,97,49)" rx="2" ry="2" />
<text  x="28.64" y="63.5" ></text>
</g>
<g >
<title>events/23 (1 samples, 0.04%)</title><rect x="11.4" y="405" width="0.5" height="15.0" fill="rgb(232,28,19)" rx="2" ry="2" />
<text  x="14.42" y="415.5" ></text>
</g>
<g >
<title>diskstats_show (1 samples, 0.04%)</title><rect x="93.0" y="293" width="0.4" height="15.0" fill="rgb(217,94,6)" rx="2" ry="2" />
<text  x="95.97" y="303.5" ></text>
</g>
<g >
<title>try_to_wake_up (2 samples, 0.08%)</title><rect x="1184.3" y="149" width="1.0" height="15.0" fill="rgb(236,119,19)" rx="2" ry="2" />
<text  x="1187.31" y="159.5" ></text>
</g>
<g >
<title>worker_thread (1 samples, 0.04%)</title><rect x="11.9" y="357" width="0.5" height="15.0" fill="rgb(252,55,49)" rx="2" ry="2" />
<text  x="14.90" y="367.5" ></text>
</g>
<g >
<title>__random (23 samples, 0.92%)</title><rect x="93.9" y="357" width="10.9" height="15.0" fill="rgb(229,170,42)" rx="2" ry="2" />
<text  x="96.91" y="367.5" ></text>
</g>
<g >
<title>child_rip (1 samples, 0.04%)</title><rect x="11.4" y="389" width="0.5" height="15.0" fill="rgb(216,21,41)" rx="2" ry="2" />
<text  x="14.42" y="399.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.04%)</title><rect x="13.3" y="261" width="0.5" height="15.0" fill="rgb(216,98,24)" rx="2" ry="2" />
<text  x="16.32" y="271.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.04%)</title><rect x="130.4" y="245" width="0.5" height="15.0" fill="rgb(237,36,3)" rx="2" ry="2" />
<text  x="133.42" y="255.5" ></text>
</g>
<g >
<title>clear_page_c (1 samples, 0.04%)</title><rect x="130.4" y="229" width="0.5" height="15.0" fill="rgb(243,95,4)" rx="2" ry="2" />
<text  x="133.42" y="239.5" ></text>
</g>
<g >
<title>delayed_work_timer_fn (1 samples, 0.04%)</title><rect x="25.6" y="229" width="0.5" height="15.0" fill="rgb(210,37,49)" rx="2" ry="2" />
<text  x="28.64" y="239.5" ></text>
</g>
<g >
<title>perf_ioctl (5 samples, 0.20%)</title><rect x="90.6" y="245" width="2.4" height="15.0" fill="rgb(229,135,11)" rx="2" ry="2" />
<text  x="93.59" y="255.5" ></text>
</g>
<g >
<title>swapper (10 samples, 0.40%)</title><rect x="1185.3" y="405" width="4.7" height="15.0" fill="rgb(254,172,41)" rx="2" ry="2" />
<text  x="1188.26" y="415.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (6 samples, 0.24%)</title><rect x="1182.4" y="357" width="2.9" height="15.0" fill="rgb(250,193,16)" rx="2" ry="2" />
<text  x="1185.41" y="367.5" ></text>
</g>
<g >
<title>kipmi0 (11 samples, 0.44%)</title><rect x="82.5" y="405" width="5.3" height="15.0" fill="rgb(213,109,14)" rx="2" ry="2" />
<text  x="85.54" y="415.5" ></text>
</g>
</g>
</svg>
